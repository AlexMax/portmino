include(CheckIncludeFile)
include(CheckSymbolExists)

set(COMPAT_SOURCES compat.h null.c)

set(CMAKE_REQUIRED_DEFINITIONS "-D_GNU_SOURCE")
check_symbol_exists(asprintf "stdio.h" HAVE_ASPRINTF)
if(NOT HAVE_ASPRINTF)
    list(APPEND COMPAT_SOURCES "asprintf.c")
endif()
check_symbol_exists(reallocarray "stdlib.h" HAVE_REALLOCARRAY)
if(NOT HAVE_REALLOCARRAY)
    list(APPEND COMPAT_SOURCES "reallocarray.c")
endif()
check_include_file("stdint.h" HAVE_STDINT)
if(NOT HAVE_STDINT)
    list(APPEND COMPAT_SOURCES "stdint/stdint.h")
endif()

add_library(portmino-compat STATIC ${COMPAT_SOURCES})
add_portmino_settings(portmino-compat)
set_property(TARGET portmino-compat PROPERTY POSITION_INDEPENDENT_CODE ON)
target_include_directories(portmino-compat PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})
if(HAVE_ASPRINTF)
    target_compile_definitions(portmino-compat PUBLIC HAVE_ASPRINTF _GNU_SOURCE)
endif()
if(HAVE_REALLOCARRAY)
    target_compile_definitions(portmino-compat PUBLIC HAVE_REALLOCARRAY _GNU_SOURCE)
endif()
if(NOT HAVE_STDINT)
    target_include_directories(portmino-compat PUBLIC stdint)
endif()

